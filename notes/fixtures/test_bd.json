[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2025-01-31T10:08:33.714Z", "user": 1, "content_type": 6, "object_id": "1", "object_repr": "Программирование", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2025-01-31T10:08:41.584Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "Python", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2025-01-31T10:08:45.161Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Linux", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2025-01-31T10:08:50.502Z", "user": 1, "content_type": 8, "object_id": "3", "object_repr": "ssl", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2025-01-31T10:14:18.010Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "CSS", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2025-01-31T11:07:36.979Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "CSS", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u0418\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435\", \"\\u041a\\u0440\\u0430\\u0442\\u043a\\u0438\\u0439 \\u0442\\u0435\\u043a\\u0441\\u0442 \\u0441\\u0442\\u0430\\u0442\\u044c\\u0438\"]}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2025-01-31T12:34:21.529Z", "user": 1, "content_type": 8, "object_id": "4", "object_repr": "django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2025-01-31T12:34:35.902Z", "user": 1, "content_type": 8, "object_id": "5", "object_repr": "css", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2025-01-31T12:34:45.118Z", "user": 1, "content_type": 8, "object_id": "6", "object_repr": "nginx", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2025-01-31T12:35:05.115Z", "user": 1, "content_type": 8, "object_id": "7", "object_repr": "gunicorn", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2025-01-31T12:35:07.071Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "Испытание свойствами и методами", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041c\\u0435\\u0442\\u043a\\u0438\"]}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2025-01-31T13:45:52.391Z", "user": 1, "content_type": 6, "object_id": "2", "object_repr": "Администрирование", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2025-01-31T13:46:30.217Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "Что-то про администрирование", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2025-01-31T14:09:18.002Z", "user": 1, "content_type": 8, "object_id": "8", "object_repr": "метка1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2025-02-04T08:56:43.647Z", "user": 1, "content_type": 8, "object_id": "9", "object_repr": "ООП", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2025-02-04T08:56:56.872Z", "user": 1, "content_type": 8, "object_id": "10", "object_repr": "обучение", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2025-02-04T08:57:15.896Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "python", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Tag\"]}}]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2025-02-04T08:57:24.662Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "linux", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Tag\"]}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2025-02-04T08:57:36.145Z", "user": 1, "content_type": 8, "object_id": "11", "object_repr": "задачи", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2025-02-04T08:57:54.300Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "Испытание свойствами и методами", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041c\\u0435\\u0442\\u043a\\u0438\"]}}]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2025-02-04T08:59:50.001Z", "user": 1, "content_type": 8, "object_id": "8", "object_repr": "метка1", "action_flag": 3, "change_message": ""}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add content type", "content_type": 4, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change content type", "content_type": 4, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete content type", "content_type": 4, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view content type", "content_type": 4, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add session", "content_type": 5, "codename": "add_session"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change session", "content_type": 5, "codename": "change_session"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete session", "content_type": 5, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view session", "content_type": 5, "codename": "view_session"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add Категория", "content_type": 6, "codename": "add_category"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change Категория", "content_type": 6, "codename": "change_category"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete Категория", "content_type": 6, "codename": "delete_category"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view Категория", "content_type": 6, "codename": "view_category"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add Статья", "content_type": 7, "codename": "add_note"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change Статья", "content_type": 7, "codename": "change_note"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete Статья", "content_type": 7, "codename": "delete_note"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view Статья", "content_type": 7, "codename": "view_note"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add Метка", "content_type": 8, "codename": "add_tagpost"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change Метка", "content_type": 8, "codename": "change_tagpost"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete Метка", "content_type": 8, "codename": "delete_tagpost"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view Метка", "content_type": 8, "codename": "view_tagpost"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add upload files", "content_type": 9, "codename": "add_uploadfiles"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change upload files", "content_type": 9, "codename": "change_uploadfiles"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete upload files", "content_type": 9, "codename": "delete_uploadfiles"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view upload files", "content_type": 9, "codename": "view_uploadfiles"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add user", "content_type": 10, "codename": "add_user"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change user", "content_type": 10, "codename": "change_user"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete user", "content_type": 10, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view user", "content_type": 10, "codename": "view_user"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add association", "content_type": 11, "codename": "add_association"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change association", "content_type": 11, "codename": "change_association"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete association", "content_type": 11, "codename": "delete_association"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view association", "content_type": 11, "codename": "view_association"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add code", "content_type": 12, "codename": "add_code"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change code", "content_type": 12, "codename": "change_code"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete code", "content_type": 12, "codename": "delete_code"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view code", "content_type": 12, "codename": "view_code"}}, {"model": "auth.permission", "pk": 49, "fields": {"name": "Can add nonce", "content_type": 13, "codename": "add_nonce"}}, {"model": "auth.permission", "pk": 50, "fields": {"name": "Can change nonce", "content_type": 13, "codename": "change_nonce"}}, {"model": "auth.permission", "pk": 51, "fields": {"name": "Can delete nonce", "content_type": 13, "codename": "delete_nonce"}}, {"model": "auth.permission", "pk": 52, "fields": {"name": "Can view nonce", "content_type": 13, "codename": "view_nonce"}}, {"model": "auth.permission", "pk": 53, "fields": {"name": "Can add user social auth", "content_type": 14, "codename": "add_usersocialauth"}}, {"model": "auth.permission", "pk": 54, "fields": {"name": "Can change user social auth", "content_type": 14, "codename": "change_usersocialauth"}}, {"model": "auth.permission", "pk": 55, "fields": {"name": "Can delete user social auth", "content_type": 14, "codename": "delete_usersocialauth"}}, {"model": "auth.permission", "pk": 56, "fields": {"name": "Can view user social auth", "content_type": 14, "codename": "view_usersocialauth"}}, {"model": "auth.permission", "pk": 57, "fields": {"name": "Can add partial", "content_type": 15, "codename": "add_partial"}}, {"model": "auth.permission", "pk": 58, "fields": {"name": "Can change partial", "content_type": 15, "codename": "change_partial"}}, {"model": "auth.permission", "pk": 59, "fields": {"name": "Can delete partial", "content_type": 15, "codename": "delete_partial"}}, {"model": "auth.permission", "pk": 60, "fields": {"name": "Can view partial", "content_type": 15, "codename": "view_partial"}}, {"model": "auth.permission", "pk": 61, "fields": {"name": "Can add site", "content_type": 16, "codename": "add_site"}}, {"model": "auth.permission", "pk": 62, "fields": {"name": "Can change site", "content_type": 16, "codename": "change_site"}}, {"model": "auth.permission", "pk": 63, "fields": {"name": "Can delete site", "content_type": 16, "codename": "delete_site"}}, {"model": "auth.permission", "pk": 64, "fields": {"name": "Can view site", "content_type": 16, "codename": "view_site"}}, {"model": "auth.permission", "pk": 65, "fields": {"name": "Can add captcha store", "content_type": 17, "codename": "add_captchastore"}}, {"model": "auth.permission", "pk": 66, "fields": {"name": "Can change captcha store", "content_type": 17, "codename": "change_captchastore"}}, {"model": "auth.permission", "pk": 67, "fields": {"name": "Can delete captcha store", "content_type": 17, "codename": "delete_captchastore"}}, {"model": "auth.permission", "pk": 68, "fields": {"name": "Can view captcha store", "content_type": 17, "codename": "view_captchastore"}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "notes", "model": "category"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "notes", "model": "note"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "notes", "model": "tagpost"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "notes", "model": "uploadfiles"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "users", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "social_django", "model": "association"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "social_django", "model": "code"}}, {"model": "contenttypes.contenttype", "pk": 13, "fields": {"app_label": "social_django", "model": "nonce"}}, {"model": "contenttypes.contenttype", "pk": 14, "fields": {"app_label": "social_django", "model": "usersocialauth"}}, {"model": "contenttypes.contenttype", "pk": 15, "fields": {"app_label": "social_django", "model": "partial"}}, {"model": "contenttypes.contenttype", "pk": 16, "fields": {"app_label": "sites", "model": "site"}}, {"model": "contenttypes.contenttype", "pk": 17, "fields": {"app_label": "captcha", "model": "captchastore"}}, {"model": "sessions.session", "pk": "0yoh82shg5ppsmi58kyjypsr28wxdx53", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgjExduu8ZmoGZStVAUtqV8e7apAvd_vfef6mRtjWPW5NlnFldlFWn3y1SekjZAd-p3KpOtazLHPWu6IM2PVSW5_Vw_w4ytfytyXpAxGQIOYhAsA6YcXIO3LkPPibjImJnZLIdMcbQJ4PWGIboA7B6fwDNwzdF:1tdnwc:PAvg8wJH6XGStOBFcSKFt8yfeR8jNwnhdw6MYwpZjVI", "expire_date": "2025-02-14T10:08:14.240Z"}}, {"model": "sessions.session", "pk": "2353it3soemzvrltgeyvjlwma2ohp4y2", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgjExduu8ZmoGZStVAUtqV8e7apAvd_vfef6mRtjWPW5NlnFldlFWn3y1SekjZAd-p3KpOtazLHPWu6IM2PVSW5_Vw_w4ytfytyXpAxGQIOYhAsA6YcXIO3LkPPibjImJnZLIdMcbQJ4PWGIboA7B6fwDNwzdF:1tdo1P:SEHmGonGZlhWpV6IOOfpc5jnx87s7DXuCoIf8a8AJUk", "expire_date": "2025-02-14T10:13:11.946Z"}}, {"model": "sessions.session", "pk": "3ouivezshyvr1mcptg533tl2zt3c3sco", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgjExduu8ZmoGZStVAUtqV8e7apAvd_vfef6mRtjWPW5NlnFldlFWn3y1SekjZAd-p3KpOtazLHPWu6IM2PVSW5_Vw_w4ytfytyXpAxGQIOYhAsA6YcXIO3LkPPibjImJnZLIdMcbQJ4PWGIboA7B6fwDNwzdF:1tioqS:emMZNi71l4f28oJcQ8n72LNgzUYaZvzbnCXVcuwBvh8", "expire_date": "2025-02-28T06:06:36.163Z"}}, {"model": "sessions.session", "pk": "9v94993p59bxpfook4vgl360xcmpic9o", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgjExduu8ZmoGZStVAUtqV8e7apAvd_vfef6mRtjWPW5NlnFldlFWn3y1SekjZAd-p3KpOtazLHPWu6IM2PVSW5_Vw_w4ytfytyXpAxGQIOYhAsA6YcXIO3LkPPibjImJnZLIdMcbQJ4PWGIboA7B6fwDNwzdF:1tiC12:n5tV9jFnnnfwPaQa39ZwuTErdLat8j7qEtPBbv0quoQ", "expire_date": "2025-02-26T12:38:56.726Z"}}, {"model": "sessions.session", "pk": "a1t0lpw772j67wiz0qfoliwtc6g9ii3o", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgjExduu8ZmoGZStVAUtqV8e7apAvd_vfef6mRtjWPW5NlnFldlFWn3y1SekjZAd-p3KpOtazLHPWu6IM2PVSW5_Vw_w4ytfytyXpAxGQIOYhAsA6YcXIO3LkPPibjImJnZLIdMcbQJ4PWGIboA7B6fwDNwzdF:1tfJdO:JBflZE3YDunooSzsNH-F32l4Y-n7OWrxT9OfV7f6u0Y", "expire_date": "2025-02-18T14:10:38.535Z"}}, {"model": "sessions.session", "pk": "ci17v176q1ev6xqju9awn8sgw54mjozp", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgjExduu8ZmoGZStVAUtqV8e7apAvd_vfef6mRtjWPW5NlnFldlFWn3y1SekjZAd-p3KpOtazLHPWu6IM2PVSW5_Vw_w4ytfytyXpAxGQIOYhAsA6YcXIO3LkPPibjImJnZLIdMcbQJ4PWGIboA7B6fwDNwzdF:1tdowu:x8yHPAy_k6NLv04TBSwP_DPoVk3ezda3LPp_lyjhS3s", "expire_date": "2025-02-14T11:12:36.521Z"}}, {"model": "sessions.session", "pk": "qtx9gv90c6r12qyll04gq9xrs8ilp9jx", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgjExduu8ZmoGZStVAUtqV8e7apAvd_vfef6mRtjWPW5NlnFldlFWn3y1SekjZAd-p3KpOtazLHPWu6IM2PVSW5_Vw_w4ytfytyXpAxGQIOYhAsA6YcXIO3LkPPibjImJnZLIdMcbQJ4PWGIboA7B6fwDNwzdF:1tdori:nb66JuSDaNAvJcTCa38qgqxwLXA-9yhnWLQN6kE9LM4", "expire_date": "2025-02-14T11:07:14.110Z"}}, {"model": "sessions.session", "pk": "t7a518qy14h40h2hyugivgpn11oaafbp", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgjExduu8ZmoGZStVAUtqV8e7apAvd_vfef6mRtjWPW5NlnFldlFWn3y1SekjZAd-p3KpOtazLHPWu6IM2PVSW5_Vw_w4ytfytyXpAxGQIOYhAsA6YcXIO3LkPPibjImJnZLIdMcbQJ4PWGIboA7B6fwDNwzdF:1tdpIH:ohE_yZm5JeiajHp0UBPTZWqslyrjAlNsbuOGJxBcPzk", "expire_date": "2025-02-14T11:34:41.613Z"}}, {"model": "sessions.session", "pk": "v7a6yqe3nodnb1d6brnhqiivp9tgm9yc", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hDogIBL9z0DGYZBqoYmpV0Z765NutDtf-_9l4i4rTVunZc4ZXERIE6_W0J6cNtBvmO7zZLmti5TkrsiD9rlOGd-Xg_376Bir9-aFJJ3TjFlzyXBYFygxNYaNtoOJuiQXfJoggLQmkoqZ2PRAhSAoJV4fwDsHDdz:1tmty1:br5w5OJrguhvh8u4zlM-AEvTMop_PZ43TFBD_E6KSiU", "expire_date": "2025-03-11T12:23:17.495Z"}}, {"model": "sessions.session", "pk": "w7wx4ol3q7sg30iif52vb0ym3x9m565a", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hCgjExduu8ZmoGZStVAUtqV8e7apAvd_vfef6mRtjWPW5NlnFldlFWn3y1SekjZAd-p3KpOtazLHPWu6IM2PVSW5_Vw_w4ytfytyXpAxGQIOYhAsA6YcXIO3LkPPibjImJnZLIdMcbQJ4PWGIboA7B6fwDNwzdF:1tdnzM:7hq-rwQOuZletTqhQZNBzGxQolFp0bcY3ep3xQve5Po", "expire_date": "2025-02-14T10:11:04.941Z"}}, {"model": "notes.tagpost", "pk": 1, "fields": {"tag": "python", "slug": "python"}}, {"model": "notes.tagpost", "pk": 2, "fields": {"tag": "linux", "slug": "linux"}}, {"model": "notes.tagpost", "pk": 3, "fields": {"tag": "ssl", "slug": "ssl"}}, {"model": "notes.tagpost", "pk": 4, "fields": {"tag": "django", "slug": "django"}}, {"model": "notes.tagpost", "pk": 5, "fields": {"tag": "css", "slug": "css"}}, {"model": "notes.tagpost", "pk": 6, "fields": {"tag": "nginx", "slug": "nginx"}}, {"model": "notes.tagpost", "pk": 7, "fields": {"tag": "gunicorn", "slug": "gunicorn"}}, {"model": "notes.tagpost", "pk": 9, "fields": {"tag": "ООП", "slug": "oop"}}, {"model": "notes.tagpost", "pk": 10, "fields": {"tag": "обучение", "slug": "obuchenie"}}, {"model": "notes.tagpost", "pk": 11, "fields": {"tag": "задачи", "slug": "zadachi"}}, {"model": "notes.category", "pk": 1, "fields": {"name": "Программирование", "slug": "programmirovanie"}}, {"model": "notes.category", "pk": 2, "fields": {"name": "Администрирование", "slug": "administrirovanie"}}, {"model": "notes.note", "pk": 1, "fields": {"title": "Доступ к media_url в шаблоне.", "slug": "dostup-k-media-url-v-shablone", "image": "", "content_short": "<p>Для доступа к переменной media_url в шаблоне.django:</p><p>нужно добавить в шаблон&nbsp;</p><pre><code class=\"language-python\">{% load static %}</code></pre><p>и указать путь как&nbsp;</p><pre><code class=\"language-python\">\"{% get_media_prefix %}{{ obj.image }}\"</code></pre>", "content_full": "<p>Для доступа к переменной media_url в шаблоне.django:</p><p>нужно добавить в шаблон&nbsp;</p><pre><code class=\"language-python\">{% load static %}</code></pre><p>и указать путь как&nbsp;</p><pre><code class=\"language-python\">\"{% get_media_prefix %}{{ obj.image }}\"</code></pre>", "time_create": "2025-01-31T10:11:32.749Z", "time_update": "2025-02-04T08:58:53.958Z", "is_published": true, "cat": 1, "author": 1, "meta_description": "", "tags": [1, 4]}}, {"model": "notes.note", "pk": 2, "fields": {"title": "Границы всех объектов на странице с помощью CSS", "slug": "css", "image": "images/2025/01/31/css-1.png", "content_short": "<p>Если в css добавить такую строчку</p><pre><code class=\"language-plaintext\">* {\r\n outline : 1px solid red !important;\r\n}</code></pre><p>То можно увидеть границы всех объектов на странице, прикольно и видимо иногда полезно</p>", "content_full": "<p>Если в css добавить такую строчку</p><pre><code class=\"language-plaintext\">* {\r\n outline : 1px solid red !important;\r\n}</code></pre><p>То можно увидеть границы всех объектов на странице, прикольно и видимо иногда полезно</p><p>&nbsp;</p><figure class=\"image image-style-align-left image_resized\" style=\"width:24.34%;\"><img style=\"aspect-ratio:749/552;\" src=\"/media/css-1_2tpoQNv.png\" width=\"749\" height=\"552\"></figure>", "time_create": "2025-01-31T10:14:18.003Z", "time_update": "2025-02-12T13:07:18.482Z", "is_published": true, "cat": 1, "author": 1, "meta_description": "", "tags": [1]}}, {"model": "notes.note", "pk": 3, "fields": {"title": "Испытание свойствами и методами", "slug": "ispytanie-svoistvami-i-metodami", "image": "images/2025/01/31/1_испытание_png.png", "content_short": "<p><a href=\"https://stepik.org/lesson/709885/step/1?unit=710450\">https://stepik.org/lesson/709885/step/1?unit=710450</a></p><p><strong>Время первого испытания.</strong><span style=\"background-color:rgb(255,255,255);color:rgb(34,34,34);\">&nbsp;</span></p><p><span style=\"background-color:rgb(255,255,255);color:rgb(34,34,34);\">Представьте, что вы получили задание от заказчика. Вас просят реализовать простую имитацию локальной сети, состоящую из набора серверов, соединенных между собой через роутер.</span></p>", "content_full": "<p><a href=\"https://stepik.org/lesson/709885/step/1?unit=710450\">https://stepik.org/lesson/709885/step/1?unit=710450</a></p><p><strong>Время первого испытания.</strong><span style=\"background-color:rgb(255,255,255);color:rgb(34,34,34);\">&nbsp;</span></p><p><span style=\"background-color:rgb(255,255,255);color:rgb(34,34,34);\">Представьте, что вы получили задание от заказчика. Вас просят реализовать простую имитацию локальной сети, состоящую из набора серверов, соединенных между собой через роутер.</span></p><figure class=\"image image-style-align-left image_resized\" style=\"width:22.74%;\"><img style=\"aspect-ratio:465/331;\" src=\"/media/1_%D0%B8%D1%81%D0%BF%D1%8B%D1%82%D0%B0%D0%BD%D0%B8%D0%B5_png.png\" width=\"465\" height=\"331\"></figure><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Каждый сервер может отправлять пакет любому другому серверу сети. Для этого у каждого есть свой уникальный IP-адрес. Для простоты - это просто целое (натуральное) число от 1 и до N, где N - общее число серверов. Алгоритм следующий. Предположим, сервер с IP = 2 собирается отправить пакет информации серверу с IP = 3. Для этого, он сначала отправляет пакет роутеру, а уже тот, смотрит на IP-адрес и пересылает пакет нужному узлу (серверу).</p><p style=\"margin-left:0px;\">Для реализации этой схемы программе предлагается объявить три класса:</p><ul><li><p style=\"margin-left:0px;\"><u>Server</u> - для описания работы серверов в сети;</p></li><li><p style=\"margin-left:0px;\"><u>Router</u> - для описания работы роутеров в сети (в данной задаче полагается один роутер);</p></li><li><p style=\"margin-left:0px;\"><u>Data</u> - для описания пакета информации.</p></li></ul><p style=\"margin-left:0px;\">Серверы будут создаваться командой:</p><pre><code class=\"language-plaintext\">sv = Server()</code></pre><p style=\"margin-left:0px;\">При этом, уникальный IP-адрес каждого сервера должен формироваться автоматически при создании нового экземпляра класса Server.</p><p style=\"margin-left:0px;\">Далее, роутер должен создаваться аналогичной командой:</p><pre><code class=\"language-plaintext\">router = Router()</code></pre><p style=\"margin-left:0px;\">А, пакеты данных, командой:</p><pre><code class=\"language-plaintext\">data = Data(строка с данными, IP-адрес назначения)</code></pre><p style=\"margin-left:0px;\">Для формирования и функционирования локальной сети, в классе Router должны быть реализованы следующие методы:</p><p style=\"margin-left:0px;\"><u>link(server)</u> - для присоединения сервера server (объекта класса Server) к роутеру (для простоты, каждый сервер соединен только с одним роутером);<br><u>unlink(server)</u> - для отсоединения сервера server (объекта класса Server) от роутера;<br><u>send_data()</u> - для отправки всех пакетов (объектов класса Data) из буфера роутера соответствующим серверам (после отправки буфер должен очищаться).</p><p style=\"margin-left:0px;\">И одно обязательное локальное свойство (могут быть и другие свойства):</p><p style=\"margin-left:0px;\"><u>buffer</u> - список для хранения принятых от серверов пакетов (объектов класса Data).</p><p style=\"margin-left:0px;\">Класс Server должен содержать свой набор методов:</p><p style=\"margin-left:0px;\"><u>send_data(data)</u> - для отправки информационного пакета data (объекта класса Data) с указанным IP-адресом получателя (пакет отправляется роутеру и сохраняется в его буфере - локальном свойстве buffer);<br><u>get_data()</u> - возвращает список принятых пакетов (если ничего принято не было, то возвращается пустой список) и очищает входной буфер;<br><u>get_ip()</u> - возвращает свой IP-адрес.</p><p style=\"margin-left:0px;\">Соответственно в объектах класса Server должны быть локальные свойства:</p><p style=\"margin-left:0px;\"><u>buffer</u> - список принятых пакетов (объекты класса Data, изначально пустой);<br><u>ip</u> - IP-адрес текущего сервера.</p><p style=\"margin-left:0px;\">Наконец, объекты класса Data должны содержать два следующих локальных свойства:</p><p style=\"margin-left:0px;\"><u>data</u> - передаваемые данные (строка);<br><u>ip</u> - IP-адрес назначения.</p><p style=\"margin-left:0px;\">Пример использования этих классов (эти строчки в программе писать не нужно):</p><pre><code class=\"language-plaintext\">router = Router()\r\nsv_from = Server()\r\nsv_from2 = Server()\r\nrouter.link(sv_from)\r\nrouter.link(sv_from2)\r\nrouter.link(Server())\r\nrouter.link(Server())\r\nsv_to = Server()\r\nrouter.link(sv_to)\r\nsv_from.send_data(Data(\"Hello\", sv_to.get_ip()))\r\nsv_from2.send_data(Data(\"Hello\", sv_to.get_ip()))\r\nsv_to.send_data(Data(\"Hi\", sv_from.get_ip()))\r\nrouter.send_data()\r\nmsg_lst_from = sv_from.get_data()\r\nmsg_lst_to = sv_to.get_data()\r\n</code></pre><p style=\"margin-left:0px;\">Ваша задача реализовать классы Router, Server и Data в соответствии с приведенным техническим заданием (ТЗ). Что-либо выводить на экран не нужно.</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Моё решение</p><pre><code class=\"language-python\">class Data:\r\n\r\n\r\n\tdef __init__(self, data: str, ip: int) -&gt; None:\r\n    \tself.data = data\r\n    \tself.ip = ip\r\n    \t\r\n\r\nclass Server:\r\n    \tSERVER_COUNT = 0\r\n\r\n\r\n\tdef __init__(self) -&gt; None:\r\n    \tServer.SERVER_COUNT += 1\r\n    \tself.ip = Server.SERVER_COUNT\r\n    \tself.buffer = []\r\n    \tself.router = None\r\n\r\n\t\r\n\tdef _check_data(self, data: Data) -&gt; None:\r\n    \tif not isinstance(data, Data):\r\n        \traise Exception('Данные должны быть экземпляром класса Data')\r\n\r\n\t\r\n\tdef _check_router_link(self) -&gt; None:\r\n    \tif self.router is None:\r\n        \traise Exception('Роутер не подключен')\r\n\r\n\t\r\n\tdef send_data(self, data: Data) -&gt; None:\r\n    \tself._check_data(data)\r\n    \tself._check_router_link()\r\n    \tself.router.add_data(data)\r\n\r\n\t\r\n\tdef receive_data(self, data: Data) -&gt; None:\r\n    \tself._check_data(data)\r\n    \tself._check_router_link()\r\n    \tif data.ip != self.ip:\r\n        \traise Exception('Неправильный IP-адрес')\r\n    \tself.buffer.append(data)\r\n\r\n\tdef get_data(self) -&gt; list:\r\n    \tdata = self.buffer\r\n    \tself.buffer = []\r\n    \treturn data\r\n\r\n\t\r\n\tdef get_ip(self) -&gt; int:\r\n    \treturn self.ip\r\n\r\n\t\r\n\tdef set_router(self, router: 'Router') -&gt; None:\r\n    \tif not isinstance(router, Router):\r\n        \traise Exception('Роутер должен быть экземпляром класса Router')\r\n    \tself.router = router\r\n\r\n\t\r\n\tdef remove_router(self) -&gt; None:\r\n    \tself.router = None\r\n\r\n\r\nclass Router:\r\n\r\n\r\n\tdef __init__(self) -&gt; None:\r\n    \tself.servers = {}\r\n    \tself.buffer = []\r\n\r\n\t\r\n\tdef _check_server(self, server: Server) -&gt; None:\r\n    \tif not isinstance(server, Server):\r\n        \traise Exception('Сервер должен быть экземпляром класса Server')\r\n\r\n\t\r\n\tdef link(self, server: Server) -&gt; None:\r\n    \tself._check_server(server)\r\n    \tserver.set_router(self)\r\n    \tself.servers[server.get_ip()] = server\r\n\r\n\t\r\n\tdef unlink(self, server: Server) -&gt; None:\r\n    \tself._check_server(server)\r\n    \tif server.get_ip() in self.servers:\r\n        \tserver.remove_router()\r\n        \tdel self.servers[server.get_ip()]\r\n\r\n\t\r\n\tdef send_data(self) -&gt; None:\r\n    \tfor data in self.buffer:\r\n        \tif data.ip in self.servers:\r\n            \tself.servers[data.ip].receive_data(data)\r\n    \tself.buffer = []\r\n\r\n\t\r\n\tdef add_data(self, data: Data) -&gt; None:\r\n    \tif not isinstance(data, Data):\r\n        \traise Exception('Данные должны быть экземпляром класса Data')\r\n    \tself.buffer.append(data)</code></pre>", "time_create": "2025-01-31T11:13:41.601Z", "time_update": "2025-02-04T08:57:54.292Z", "is_published": true, "cat": 1, "author": 1, "meta_description": "", "tags": [1, 9, 10, 11]}}, {"model": "notes.note", "pk": 4, "fields": {"title": "Что-то про администрирование", "slug": "chto-to-pro-administrirovanie", "image": "", "content_short": "<p>Короткий текст</p>", "content_full": "<p>Полный текст</p>", "time_create": "2025-01-31T13:46:30.209Z", "time_update": "2025-02-04T08:59:20.138Z", "is_published": true, "cat": 2, "author": 1, "meta_description": "", "tags": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11]}}, {"model": "notes.note", "pk": 5, "fields": {"title": "Хранение SECRET_KEY вне файла settings.py", "slug": "khranenie-secret-key-vne-faila-settings-py", "image": "images/2025/02/12/secret_key.JPG", "content_short": "<p>Хранение секретного ключа (<code>SECRET_KEY</code>) вне файла <code>settings.py</code> — это хорошая практика для обеспечения безопасности вашего проекта.&nbsp;</p><p>Один из способов сделать это — использовать переменные окружения. Вот пошаговая инструкция, как это реализовать:</p>", "content_full": "<p style=\"margin-left:0px;\">Хранение секретного ключа (<code>SECRET_KEY</code>) вне файла <code>settings.py</code> — это хорошая практика для обеспечения безопасности вашего проекта.&nbsp;</p><p style=\"margin-left:0px;\">Один из способов сделать это — использовать переменные окружения. Вот пошаговая инструкция, как это реализовать:</p><h3 style=\"margin-left:0px;\">Шаги:</h3><ol><li><p style=\"margin-left:0px;\"><strong>Создание переменной окружения:</strong>Переменную окружения можно установить разными способами в зависимости от операционной системы и среды, в которой вы работаете. Например, на Linux или macOS вы можете добавить переменную в файл <code>.bashrc</code> или <code>.bash_profile</code>:</p><pre><code class=\"language-plaintext\">export DJANGO_SECRET_KEY='your_secret_key_here'</code></pre><p style=\"margin-left:0px;\">На Windows вы можете установить переменную через командную строку:</p><pre><code class=\"language-plaintext\">setx DJANGO_SECRET_KEY \"your_secret_key_here\"</code></pre></li><li><p style=\"margin-left:0px;\"><strong>Чтение переменной окружения в </strong><code><strong>settings.py</strong></code><strong>:</strong>После того как вы установили переменную окружения, вы можете прочитать её в вашем <code>settings.py</code> следующим образом:</p><pre><code class=\"language-python\">import os\r\n\r\nSECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')</code></pre><p style=\"margin-left:0px;\">Таким образом, ваш <code>SECRET_KEY</code> будет считываться из переменной окружения при запуске приложения.</p></li><li><p style=\"margin-left:0px;\"><strong>Проверка наличия переменной:</strong>Чтобы избежать ошибок в случае отсутствия переменной окружения, вы можете добавить проверку:</p><pre><code class=\"language-python\">import os\r\n\r\ntry:\r\n    SECRET_KEY = os.environ['DJANGO_SECRET_KEY']\r\nexcept KeyError:\r\n    raise Exception(\"Please set the environment variable DJANGO_SECRET_KEY\")</code></pre><p style=\"margin-left:0px;\">Это позволит убедиться, что переменная установлена до запуска приложения.</p></li><li><p style=\"margin-left:0px;\"><strong>Использование утилиты </strong><code><strong>python-decouple</strong></code><strong> (опционально):</strong>Библиотека <code>python-decouple</code> предоставляет удобный способ работы с переменными окружения и конфигурационными файлами. Её можно установить через pip:</p><pre><code class=\"language-plaintext\">pip install python-decouple</code></pre><p style=\"margin-left:0px;\">Затем вы можете использовать её в своем <code>settings.py</code>:</p><pre><code class=\"language-python\">from decouple import config\r\n\r\nSECRET_KEY = config('DJANGO_SECRET_KEY')</code></pre><p style=\"margin-left:0px;\"><code>python-decouple</code> автоматически обработает отсутствие переменной и выдаст исключение, если она не найдена.</p></li></ol><h3 style=\"margin-left:0px;\">Пример <code>settings.py</code> с использованием <code>python-decouple</code>:</h3><pre><code class=\"language-python\">from decouple import config\r\n\r\nBASE_DIR = Path(__file__).resolve(strict=True).parent.parent\r\n\r\nSECRET_KEY = config('DJANGO_SECRET_KEY')\r\n\r\nDEBUG = False\r\n\r\nALLOWED_HOSTS = ['yourdomain.com']\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.postgresql',\r\n        'NAME': 'mydb',\r\n        'USER': 'dbuser',\r\n        'PASSWORD': config('DB_PASSWORD'),\r\n        'HOST': 'localhost',\r\n        'PORT': '',\r\n    }\r\n}\r\n\r\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\r\nSTATIC_URL = '/static/'\r\n\r\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\r\nMEDIA_URL = '/media/'\r\n\r\nCSRF_COOKIE_SECURE = True\r\nSESSION_COOKIE_SECURE = True\r\nSECURE_SSL_REDIRECT = True\r\nSECURE_HSTS_SECONDS = 31536000\r\nSECURE_HSTS_INCLUDE_SUBDOMAINS = True\r\nSECURE_HSTS_PRELOAD = True\r\nX_FRAME_OPTIONS = 'DENY'</code></pre><h3 style=\"margin-left:0px;\">Заключение</h3><p style=\"margin-left:0px;\">Хранение чувствительных данных, таких как <code>SECRET_KEY</code>, вне файла <code>settings.py</code> — это важная мера безопасности.&nbsp;</p><p style=\"margin-left:0px;\">Использование переменных окружения или библиотек, таких как <code>python-decouple</code>, помогает защитить вашу систему от потенциальных угроз.</p>", "time_create": "2025-02-12T13:09:53.060Z", "time_update": "2025-02-12T13:12:29.638Z", "is_published": true, "cat": 1, "author": 1, "meta_description": "Хранение SECRET_KEY вне файла settings.py", "tags": [1, 4]}}, {"model": "notes.note", "pk": 6, "fields": {"title": "Добавление капчи в проект на джанго", "slug": "dobavlenie-kapchi-v-proekt-na-dzhango", "image": "images/2025/02/14/capcha.JPG", "content_short": "<p>В статье будет рассмотрено добавление капчи на основе пакета django-simple-captcha. Установим пакет</p><pre><code class=\"language-plaintext\">pip install django-simple-captcha</code></pre><p>В settings.py</p><pre><code class=\"language-plaintext\">INSTALLED_APPS = [\r\n...\r\n    'captcha',\r\n...\r\n]</code></pre><p>&nbsp;Далее, по документации нам нужно выполнить миграцию:</p><pre><code class=\"language-plaintext\">python manage.py migrate</code></pre><p style=\"margin-left:0px;\">Затем, в корневой список маршрутов добавим строчку:</p>", "content_full": "<p>В статье будет рассмотрено добавление капчи на основе пакета django-simple-captcha. Установим пакет</p><pre><code class=\"language-plaintext\">pip install django-simple-captcha</code></pre><p>В settings.py</p><pre><code class=\"language-plaintext\">INSTALLED_APPS = [\r\n...\r\n    'captcha',\r\n\r\n...\r\n]</code></pre><p>Далее, по документации нам нужно выполнить миграцию:</p><pre><code class=\"language-plaintext\">python manage.py migrate</code></pre><p style=\"margin-left:0px;\">Затем, в корневой список маршрутов добавим строчку:</p><pre><code class=\"language-plaintext\">urlpatterns = [\r\n...\r\n    path('captcha/', include('captcha.urls')),\r\n...\r\n]</code></pre><p>Проверять будем на странице с обратной связью. Вот такая форма. Здесь поля <code>name </code>и <code>email</code>отключены для зарегистрированных пользователей и заполняются из профиля, и спользуются поля &nbsp;<code>name_hidden</code> и <code>email_hidden</code>, т.к. при отправке на сервер отключенные поля не передаются.</p><pre><code class=\"language-plaintext\">class ContactForm(forms.Form):\r\n    name = forms.CharField(\r\n        label='Имя',\r\n        widget=forms.TextInput(attrs={'class': 'form-input'})\r\n    )\r\n    email = forms.CharField(\r\n        required=False,\r\n        label='E-mail',\r\n        widget=forms.TextInput(attrs={'class': 'form-input'})\r\n    )\r\n    content = forms.CharField(\r\n        label=\"Сообщение\",\r\n        widget=forms.Textarea(attrs={'rows': 3}),\r\n        max_length=3000\r\n    )\r\n    captcha = CaptchaField()\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        user = kwargs.pop('user', None)\r\n        super(ContactForm, self).__init__(*args, **kwargs)\r\n\r\n        if user and user.is_authenticated:\r\n            self.fields['name'].initial = user.username\r\n            self.fields['name'].widget.attrs['disabled'] = True  # Отключаем поле\r\n            self.fields['name'].required = False\r\n            self.fields['email'].initial = user.email\r\n            self.fields['email'].widget.attrs['disabled'] = True  # Отключаем поле\r\n            self.fields['email'].required = False\r\n\r\n            # Добавляем скрытые поля для передачи данных на сервер\r\n            self.fields['name_hidden'] = forms.CharField(\r\n                initial=user.username,\r\n                widget=forms.HiddenInput()\r\n            )\r\n            self.fields['email_hidden'] = forms.EmailField(\r\n                initial=user.email,\r\n                widget=forms.HiddenInput()\r\n            )</code></pre><p>И представление формы.&nbsp;</p><pre><code class=\"language-plaintext\">class ContactView(DataMixin, FormView):\r\n    form_class = ContactForm\r\n    success_url = reverse_lazy('home')\r\n    template_name = \"notes/contact.html\"\r\n\r\n    def get_context_data(self, **kwargs):\r\n        context = super().get_context_data(**kwargs)\r\n        context['page_description'] = 'Обратная связь'\r\n        context['page_description_name'] = 'description'\r\n        return self.get_mixin_context(context, title_page='Обратная связь')\r\n\r\n    def form_valid(self, form):\r\n        # Если пользователь аутентифицирован, используем данные из скрытых полей\r\n        if self.request.user.is_authenticated:\r\n            name = form.cleaned_data['name_hidden']\r\n            email = form.cleaned_data['email_hidden']\r\n        else:\r\n            # Получаем данные из формы\r\n            name = form.cleaned_data['name']\r\n            email = form.cleaned_data['email']\r\n\r\n        content = form.cleaned_data['content']\r\n\r\n        # Формируем тему и текст письма\r\n        subject = f\"Новое сообщение от {name}\"\r\n        message = f\"\"\"\r\n        Имя: {name}\r\n        Email: {email}\r\n        Сообщение:\r\n        {content}\r\n        \"\"\"\r\n        # Отправляем письмо\r\n        try:\r\n            send_mail(\r\n                subject,  # Тема письма\r\n                message,  # Текст письма\r\n                settings.DEFAULT_FROM_EMAIL,  # От кого (ваш email из настроек)\r\n                [settings.EMAIL_ADMIN],  # Кому (ваш email из настроек)\r\n                fail_silently=False,  # Выводить ошибки, если отправка не удалась\r\n            )\r\n            # Добавляем сообщение об успехе\r\n            messages.success(self.request, 'Ваше сообщение успешно отправлено!')\r\n        except Exception as e:\r\n            # Добавляем сообщение об ошибке\r\n            messages.error(self.request, f'Ошибка при отправке письма: {e}')\r\n\r\n        return super().form_valid(form)\r\n\r\n    def form_invalid(self, form):\r\n        # Восстанавливаем значения полей name и email из скрытых полей\r\n        if self.request.user.is_authenticated:\r\n            form.data = form.data.copy()  # Делаем копию данных формы\r\n            form.data['name'] = form.data.get('name_hidden', '')\r\n            form.data['email'] = form.data.get('email_hidden', '')\r\n        return super().form_invalid(form)\r\n\r\n    def get_form_kwargs(self):\r\n        kwargs = super().get_form_kwargs()\r\n        kwargs['user'] = self.request.user\r\n        return kwargs</code></pre><p>И шаблон</p><pre><code class=\"language-plaintext\">{% block content %}\r\n    &lt;div class=\"article\"&gt;\r\n        &lt;h2&gt; {{ page_description }}&lt;/h2&gt;\r\n\r\n        &lt;form method=\"post\"&gt;\r\n            {% csrf_token %}\r\n\r\n            &lt;div class=\"form-error\"&gt;{{ form.non_field_errors }}&lt;/div&gt;\r\n\r\n            {% for field in form %}\r\n                {% if not field.is_hidden %}  &lt;!-- Проверяем, не является ли поле скрытым --&gt;\r\n                    &lt;div class=\"form-field\"&gt;\r\n                        &lt;label class=\"form-label\" for=\"{{ field.id_for_label }}\"&gt;{{ field.label }}&lt;/label&gt; {{ field }}\r\n                        &lt;div class=\"form-error\"&gt;{{ field.errors }}&lt;/div&gt;\r\n                    &lt;/div&gt;\r\n                {% else %}\r\n                    &lt;div class=\"hidden-field\"&gt;{{ field }}&lt;/div&gt;\r\n                {% endif %}\r\n            {% endfor %}\r\n\r\n            &lt;button type=\"submit\"&gt;Отправить&lt;/button&gt;\r\n        &lt;/form&gt;\r\n\r\n    &lt;/div&gt;\r\n{% endblock %}</code></pre><p>Вот пожалуй и всё.</p>", "time_create": "2025-02-14T06:22:24.660Z", "time_update": "2025-02-14T06:22:24.660Z", "is_published": true, "cat": 1, "author": 1, "meta_description": "Настройка капчи на сайте django", "tags": [1, 4]}}, {"model": "users.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$870000$sAN2DutsEXUXNGeB9bWLnG$5vsi+ggKDYg1c3ygjKRKdV9OpRE9iSLVFWJzU5pWn2I=", "last_login": "2025-02-14T06:20:30.682Z", "is_superuser": true, "username": "root", "first_name": "", "last_name": "", "email": "r@r.ru", "is_staff": true, "is_active": true, "date_joined": "2025-01-31T10:07:39.699Z", "photo": "users/2025/02/04/kotik.jpg", "date_birth": "1925-01-01", "groups": [], "user_permissions": []}}, {"model": "users.user", "pk": 2, "fields": {"password": "pbkdf2_sha256$870000$hIpcPAbdnmWl64GN0UQ6LO$R/AiTbZ03KbdOwo9Q348/tkhZ4MNv5deiDbULaQUFvQ=", "last_login": "2025-02-13T11:00:01.563Z", "is_superuser": false, "username": "ФоминыхВасилий", "first_name": "Василий", "last_name": "Фоминых", "email": "fominihvv@gmail.com", "is_staff": false, "is_active": true, "date_joined": "2025-02-13T10:59:53.257Z", "photo": "", "date_birth": null, "groups": [], "user_permissions": []}}, {"model": "users.user", "pk": 3, "fields": {"password": "pbkdf2_sha256$870000$OrVqpOudSrJcZ3o55jpRp0$/TQPbnf59PGKKnCMVMLlwsFrJPrXdIWF+bNRnZ/62YI=", "last_login": "2025-02-25T12:23:17.490Z", "is_superuser": false, "username": "GogaMaster", "first_name": "Василий", "last_name": "Фоминых", "email": "gogamaster@yandex.ru", "is_staff": false, "is_active": true, "date_joined": "2025-02-25T12:23:02.275Z", "photo": "", "date_birth": null, "groups": [], "user_permissions": []}}, {"model": "sites.site", "pk": 1, "fields": {"domain": "example.com", "name": "example.com"}}]